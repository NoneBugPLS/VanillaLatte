<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zelin.mapper.CompanyinfoMapper">
  <resultMap id="BaseResultMap" type="com.zelin.pojo.Companyinfo">
    <id column="cid" jdbcType="INTEGER" property="cid" />
    <result column="compName" jdbcType="VARCHAR" property="compname" />
    <result column="ownerName" jdbcType="VARCHAR" property="ownername" />
    <result column="ownerTel" jdbcType="VARCHAR" property="ownertel" />
    <result column="compInfo" jdbcType="VARCHAR" property="compinfo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cid, compName, ownerName, ownerTel, compInfo
  </sql>
  <select id="selectByExample" parameterType="com.zelin.pojo.CompanyinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from companyinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from companyinfo
    where cid = #{cid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from companyinfo
    where cid = #{cid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zelin.pojo.CompanyinfoExample">
    delete from companyinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zelin.pojo.Companyinfo">
    insert into companyinfo (cid, compName, ownerName, 
      ownerTel, compInfo)
    values (#{cid,jdbcType=INTEGER}, #{compname,jdbcType=VARCHAR}, #{ownername,jdbcType=VARCHAR}, 
      #{ownertel,jdbcType=VARCHAR}, #{compinfo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zelin.pojo.Companyinfo">
    insert into companyinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        cid,
      </if>
      <if test="compname != null">
        compName,
      </if>
      <if test="ownername != null">
        ownerName,
      </if>
      <if test="ownertel != null">
        ownerTel,
      </if>
      <if test="compinfo != null">
        compInfo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="compname != null">
        #{compname,jdbcType=VARCHAR},
      </if>
      <if test="ownername != null">
        #{ownername,jdbcType=VARCHAR},
      </if>
      <if test="ownertel != null">
        #{ownertel,jdbcType=VARCHAR},
      </if>
      <if test="compinfo != null">
        #{compinfo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zelin.pojo.CompanyinfoExample" resultType="java.lang.Long">
    select count(*) from companyinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update companyinfo
    <set>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.compname != null">
        compName = #{record.compname,jdbcType=VARCHAR},
      </if>
      <if test="record.ownername != null">
        ownerName = #{record.ownername,jdbcType=VARCHAR},
      </if>
      <if test="record.ownertel != null">
        ownerTel = #{record.ownertel,jdbcType=VARCHAR},
      </if>
      <if test="record.compinfo != null">
        compInfo = #{record.compinfo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update companyinfo
    set cid = #{record.cid,jdbcType=INTEGER},
      compName = #{record.compname,jdbcType=VARCHAR},
      ownerName = #{record.ownername,jdbcType=VARCHAR},
      ownerTel = #{record.ownertel,jdbcType=VARCHAR},
      compInfo = #{record.compinfo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zelin.pojo.Companyinfo">
    update companyinfo
    <set>
      <if test="compname != null">
        compName = #{compname,jdbcType=VARCHAR},
      </if>
      <if test="ownername != null">
        ownerName = #{ownername,jdbcType=VARCHAR},
      </if>
      <if test="ownertel != null">
        ownerTel = #{ownertel,jdbcType=VARCHAR},
      </if>
      <if test="compinfo != null">
        compInfo = #{compinfo,jdbcType=VARCHAR},
      </if>
    </set>
    where cid = #{cid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zelin.pojo.Companyinfo">
    update companyinfo
    set compName = #{compname,jdbcType=VARCHAR},
      ownerName = #{ownername,jdbcType=VARCHAR},
      ownerTel = #{ownertel,jdbcType=VARCHAR},
      compInfo = #{compinfo,jdbcType=VARCHAR}
    where cid = #{cid,jdbcType=INTEGER}
  </update>
</mapper>